## CircleCI configuration
# ======================
#
# This page describes how to setup CircleCI version 2.0
# for a project built on top of DOLFIN. Tests are run
# using FEniCS docker images, in particular using an
# image with the development version of FEniCS. Note that
# modern FEniCS Docker images have both Python version 2
# and 3. Hence it is easy to change a Python version of
# the below commands or even run both versions.
#
# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
# This config file is borrowed from
# https://raw.githubusercontent.com/blechta/fenapack/master/circle.yml

version: 2

jobs:
  build:
    docker:
      - image: quay.io/fenicsproject/stable
        user: fenics
        environment:
          LD_LIBRARY_PATH: /home/fenics/local/lib
          CMAKE_PREFIX_PATH: /home/fenics/local
    working_directory: /home/fenics/xalbrin

    steps:
      - checkout

      - run:
        name: Environment and FEniCS version info
        command: |
          echo $USER $HOME $PWD $PATH $LD_LIBRARY_PATH $CMAKE_PREFIX_PATH
          python3 -c "import ffc; print(ffc.git_commit_hash(), ffc.ufc_signature())"
          python3 -c "import dolfin; print(dolfin.git_commit_hash())"
  
      - run:
        name: Install FENaPack
        command: |
          pip3 install -v --user .
  
      - run:
        name: Import xalbrain first time (JIT)
        command: python3 -c "import xalbrain"
  
  test:
    docker:
      - image: quay.io/fenicsproject/stable
        user: fenics
        environment:
          LD_LIBRARY_PATH: /home/fenics/local/lib
          CMAKE_PREFIX_PATH: /home/fenics/local
    working_directory: /home/fenics/xalbrin
  
    steps: 
      -checkout
  
      - run:
        name: Unit tests
        command: py.test-3 test/unit
  
      - store_artifacts:
        path: /tmp/circle
        destination: build
  
      - store_test_results:
        path: /tmp/circle

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
        requires:
          - build
        filters:
          branches:
            only: master
